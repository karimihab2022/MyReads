{"version":3,"sources":["BooksAPI.js","Book.js","BooksShelf.js","Booklist.js","Search.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","Book","props","imgUrl","undefined","imageLinks","thumbnail","console","log","react_default","a","createElement","className","style","width","height","backgroundImage","value","onChange","e","onchange","target","disabled","title","authors","BookShelf","name","books","map","key","src_Book","Booklist","_useState","useState","_useState2","slicedToArray","CurrentlyReading","setCurrentlyReading","_useState3","_useState4","WanttoRead","setWanttoRead","_useState5","_useState6","Read","setRead","useEffect","currenyReading","filter","wanttoread","read","BooksShelf","react_router_dom","to","Search","onClick","close","onsearchchange","type","placeholder","onupdatebook","App","setBooks","searchbooks","setSearchbooks","data","Books","react_router","exact","path","src_Booklist","status","oldbook","BooksAPI","src_Search","query","searchresult","length","i","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.85b4fd12.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react'\r\n\r\nconst Book =(props)=>{\r\n\r\n    \r\n  const handleChange=(e)=>{\r\n    props.onchange( props.book, e.target.value)\r\n  };\r\n\r\n  var imgUrl;\r\n  if (props.book.imageLinks === undefined || props.book.imageLinks.thumbnail === undefined) {\r\n    console.log(\"no image \");\r\n  } \r\n  else {\r\n    imgUrl =props.book.imageLinks.thumbnail;\r\n  }\r\n    return(\r\n      \r\n        <div className=\"book\">\r\n                <div className=\"book-top\">\r\n\r\n                  <div className=\"book-cover\" style={{ width: 128, height: 193,\r\n                     backgroundImage: `url(${imgUrl})` }}>\r\n                  </div>\r\n\r\n                  <div className=\"book-shelf-changer\">\r\n                    <select  value={props.book.shelf}  onChange={handleChange}>\r\n                      <option value=\"move\" disabled>Move to...</option>\r\n                      <option value=\"currentlyReading\">Currently Reading</option>\r\n                      <option value=\"wantToRead\">Want to Read</option>\r\n                      <option value=\"read\">Read</option>\r\n                      <option value=\"none\">None</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"book-title\">{props.book.title}</div>\r\n                <div className=\"book-authors\">{props.book.authors}</div>\r\n          </div>\r\n    );\r\n}\r\nexport default Book;","import React from 'react'\r\nimport Book from './Book';\r\n\r\nconst BookShelf =(props)=>{\r\n   \r\n\r\n    \r\n\r\n    return (\r\n    <div className=\"bookshelf\">\r\n        <h2 className=\"bookshelf-title\">{props.name}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid\">\r\n              {props.books.map((book)=>{\r\n                  return( \r\n                     <li key={book.id}>\r\n                       <Book book={book} onchange={props.onchange}/>\r\n                     </li> \r\n                  );\r\n\r\n              })}\r\n           \r\n          \r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n}\r\nexport default BookShelf;","import React ,{ useEffect , useState } from 'react'\r\nimport BooksShelf from \"./BooksShelf\"\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Booklist = (props)=>{\r\n   \r\n\r\n  const [CurrentlyReading,setCurrentlyReading]= useState([]);\r\n  const [WanttoRead,setWanttoRead]= useState([]);\r\n  const [Read,setRead]= useState([]);\r\n\r\n\r\n  useEffect(()=>{\r\n   const currenyReading = props.books.filter((book=>{\r\n       return(book.shelf===\"currentlyReading\");\r\n   })\r\n  );\r\n    setCurrentlyReading(currenyReading);\r\n\r\n  const wanttoread = props.books.filter((book=>{\r\n    return(book.shelf===\"wantToRead\");\r\n})\r\n);\r\n  setWanttoRead(wanttoread);\r\n\r\nconst read = props.books.filter((book=>{\r\n    return(book.shelf===\"read\");\r\n})\r\n);\r\n  setRead(read);\r\n\r\n  },[props.books]);\r\n\r\n  \r\n\r\n return(\r\n     \r\n     <div className=\"list-books\">\r\n\r\n          <div className=\"list-books-title\">\r\n              <h1>MyReads</h1>\r\n           </div>\r\n\r\n        <div className=\"list-books-content\">\r\n            <div>\r\n            <BooksShelf books={CurrentlyReading} name=\"Currently Reading\" onchange={props.onchange}/>\r\n            <BooksShelf books={WanttoRead} name=\"Want to Read\" onchange={props.onchange}/>\r\n            <BooksShelf books={Read} name=\"Read\"onchange={props.onchange} />\r\n            </div>\r\n       \r\n        </div>\r\n       \r\n        <div className=\"open-search\">\r\n          <Link to=\"/search\">\r\n            Add a book\r\n          </Link>\r\n        </div>\r\n     </div>\r\n   \r\n\r\n );\r\n}\r\nexport default Booklist;","import React from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"./Book\";\r\n const Search =(props)=>{\r\n     \r\n\r\n    const handelsearchchange=(value)=>{\r\n        props.onsearchchange(value.target.value)\r\n        \r\n    }\r\n\r\n    const handelclose =()=>{\r\n        props.close();\r\n    }\r\n    return(\r\n        <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n                 <Link to=\"/\" className=\"close-search\"  onClick={handelclose} >Close</Link>\r\n\r\n                <div className=\"search-books-input-wrapper\">\r\n                 <input onChange={handelsearchchange} type=\"text\" placeholder=\"Search by title or author\"/>\r\n                </div>\r\n             </div>\r\n\r\n            <div className=\"search-books-results\">\r\n                 <ol className=\"books-grid\">\r\n                     {props.books.map((book)=>(\r\n                            <li key={book.id}>\r\n                                <Book book={book} onchange={props.onupdatebook}/>\r\n                          </li>\r\n                     ))}\r\n\r\n                 </ol>\r\n             </div>\r\n      </div>\r\n    );\r\n\r\n }\r\n\r\n export default Search;","import React ,{ useEffect , useState } from 'react'\r\nimport * as BooksAPI from \"./BooksAPI\"\r\nimport Booklist from \"./Booklist\"\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Search from './Search';\r\nimport './App.css'\r\n\r\n\r\n\r\nconst App =()=>{\r\n\r\n  const [books,setBooks]= useState([]);\r\n  const [searchbooks,setSearchbooks]= useState([]);\r\n \r\n\r\n  useEffect(()=>{\r\n    BooksAPI.getAll().then((Books)=>{\r\n      setBooks(Books);\r\n    }\r\n  )\r\n  },[]);\r\n\r\n\r\n  const handelshelfchange = (book, status) => {\r\n    setBooks(books.map((oldbook) => {\r\n          if (oldbook.id === book.id) {\r\n                oldbook.shelf = status;\r\n              }\r\n          return oldbook;\r\n      }));\r\n\r\n    BooksAPI.update(book,status)\r\n   \r\n  };\r\n\r\n  const handelsearchchange =(value)=>{\r\n    if(value){\r\n      BooksAPI.search(value)\r\n      .then(searchresult=>{\r\n        if(searchresult.length){\r\n          searchresult = searchresult.map((book) => {\r\n            if (book.shelf === undefined){\r\n                  book.shelf = \"none\";\r\n               }\r\n            \r\n            for(let i=0; i< books.length; i++) {\r\n              \r\n                if (books[i].id === book.id) {\r\n                      book.shelf = books[i].shelf;\r\n                   }\r\n            }\r\n           \r\n            return book;\r\n          });\r\n          setSearchbooks(searchresult);\r\n        }\r\n        else{\r\n          setSearchbooks([]);\r\n        }\r\n      })\r\n    }\r\n    else{\r\n      setSearchbooks([]);\r\n\r\n    }\r\n   \r\n\r\n  };\r\n\r\n\r\n  const UpdateBook = (book, status) => {\r\n      book.shelf=status;\r\n      setBooks(books.filter((oldbook)=>((book.id!==oldbook.id))).concat([book]));\r\n      setSearchbooks(searchbooks.filter((oldbook)=>((book.id!==oldbook.id))).concat([book]));\r\n      BooksAPI.update(book, status);\r\n  };\r\n\r\n  const handelclose=()=>{\r\n    setSearchbooks([]);\r\n  };\r\n\r\n\r\n\r\n  return(\r\n      <div>\r\n\r\n        <Switch>   \r\n           <Route   exact path=\"/\">\r\n              <Booklist books={books} onchange={handelshelfchange}/> \r\n          </Route>\r\n\r\n           <Route path=\"/search\">\r\n              <Search books={searchbooks} onsearchchange={handelsearchchange} onupdatebook={UpdateBook} close={handelclose}/> \r\n            </Route>\r\n\r\n         </Switch> \r\n            \r\n      </div>\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\nimport { BrowserRouter} from 'react-router-dom'\r\n\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n<App />\r\n</BrowserRouter>\r\n, document.getElementById('root'))\r\n"],"sourceRoot":""}